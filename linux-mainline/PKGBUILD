pkgname=linux-mainline
pkgver=4.18.0.rc8
pkgrel=5

pkgdesc='linux kernel and modules'
url='https://www.kernel.org'
arch=('x86_64')
license=('GPL2')

options=('!strip')

backup=("etc/mkinitcpio.d/$pkgname.preset")

depends=('coreutils' 'linux-firmware' 'kmod' 'mkinitcpio')
makedepends=('xmlto' 'inetutils' 'bc' 'libelf' 'git')
optdepends=('crda: to set the correct wireless channels of your country')

source=('git+https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git'
        'https://git.archlinux.org/svntogit/packages.git/plain/linux/trunk/config'
        'generate-sundry'
        'install-headers')

# Linus Torvalds
# Greg Kroah-Hartman
validpgpkeys=('ABAF11C65A2970B130ABE3C479BE3E4300411886'
              '647F28654894E3BD457199BE38DBBDC86092693E')

sha256sums=('SKIP'
            'bb700544d499a92dab141a218cc1eac62fdff0b67682748cb827035269c02a55'
            'e86f2caba5f30ea9f5823e470e3ab84dcfe5647a42b6c365a784a53aed603a6f'
            '27d52500ac7eb8297c73422ddad19955ac127cd68e543c6350c76a5df321ab7c')

pkgver() {
    cd linux
    make kernelversion | sed 's/-/./'
}

prepare() {
    cd linux
    _tag="$(git tag --sort=v:refname | tail -n1)"

    # Override the original source array so that I can make use of makepkg's
    # internal signature verification routines.  The main diagnostic reporting
    # function (check_pgpsigs) depends on the source array content rather than
    # allowing me to explicitly passing in the necessary netfiles.
    source=("git+https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git#tag=$_tag?signed")
    check_pgpsigs all

    # Bypass makepkg by manually checking out the required tag so that I can
    # continue to use to pkgver function without the need to maintain the
    # versions manually.
    git checkout --no-track -fB build "$_tag"

    # Before doing anything else, save our current clean checkout so that
    # subsequent changes to files such as .config won't mark the respository
    # as dirty and result in a '+' being added to the localversion.
    ./scripts/setlocalversion --save-scmversion

    make olddefconfig
}

build() {
    cd linux
    make LOCALVERSION="${pkgname#linux}" bzImage modules
}

package() {
    cd linux
    _version=$(make kernelversion)
    _variant=${pkgname#linux}
    _kernel=$_version$_variant

    # Kernel image and modules
    install -Dm0644 arch/x86/boot/bzImage "$pkgdir"/boot/vmlinuz-"$pkgname"
    make INSTALL_MOD_PATH="$pkgdir"/usr modules_install

    # Remove the 'build' and 'source' symlinks which just point back to the
    # build directory.
    rm -f "$pkgdir"/usr/lib/modules/"$_kernel"/build
    rm -f "$pkgdir"/usr/lib/modules/"$_kernel"/source

    ln -s ../extramodules"$_variant" "$pkgdir"/usr/lib/modules/"$_kernel"/extramodules
    printf '%s\n' "$_version" | install -Dm0644 /dev/stdin "$pkgdir"/usr/lib/modules/extramodules"$_variant"/version

    # Provide an unstripped vmlinux as it may be useful for debugging and other
    # reporting, e.g. `gdb vmlinux /proc/kcore'
    install -Dm0755 vmlinux "$pkgdir"/usr/lib/modules/"$_kernel"/build/vmlinux

    # Provide mkinitcpio presets and pacman hooks for rebuilding the initramfs
    # and cleaning up.
    "$srcdir"/generate-sundry -t "$srcdir" "$pkgname" "$_kernel"

     install -Dm0644 "$srcdir"/"$pkgname".preset "$pkgdir"/etc/mkinitcpio.d/"$pkgname".preset
     install -Dm0644 "$srcdir"/90-"$pkgname".hook "$pkgdir"/usr/share/libalpm/hooks/90-"$pkgname".hook
     install -Dm0644 "$srcdir"/60-"$pkgname".hook "$pkgdir"/usr/share/libalpm/hooks/60-"$pkgname".hook
     install -Dm0644 "$srcdir"/30-"$pkgname".hook "$pkgdir"/usr/share/libalpm/hooks/30-"$pkgname".hook

    # Provide internal headers and tools for third-party modules.  There is no
    # standard make target for this.
    "$srcdir"/install-headers "$pkgdir"/usr/lib/modules/"$_kernel"/build

    # Documentation (this should probably be in /usr/share/doc).
    cp -a --no-preserve=ownership Documentation "$pkgdir"/usr/lib/modules/"$_kernel"/build

    # These headers are provided by libdrm on Arch Linux
    rm -rf "$pkgdir"/usr/include/drm
}
