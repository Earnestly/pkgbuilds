pkgname=ncurses-git
pkgver=6.1.r47.gacb4184f
pkgrel=1

pkgdesc='unofficial snapshots from ftp://invisible-island.net/ncurses/current/'
url='http://ncurses.scripts.mit.edu/?p=ncurses.git'
arch=('i686' 'x86_64')
license=('MIT')

depends=('glibc' 'gcc-libs')
makedepends=('git')

# Library provides now needed for Arch Linux's readline package.
provides=('ncurses' 'libtinfo' 'libncursesw.so=6-64')
conflicts=('ncurses' 'libtinfo')

source=('git://ncurses.scripts.mit.edu/ncurses.git')

sha1sums=('SKIP')

pkgver() {
    cd ncurses
    git describe --long --tags | sed 's/^v//; s/-/.r/; s/-/./'
}

build() {
    cd ncurses
    ./configure --prefix=/usr \
        --with-shared \
        --with-normal \
        --with-ticlib=tic \
        --with-cxx-shared \
        --with-cxx-binding \
        --with-termlib=tinfo \
        --without-ada \
        --without-debug \
        --enable-widec \
        --enable-pthread \
        --enable-pc-files \
        --enable-hard-tabs \
        --enable-weak-symbols
    make
}

package() {
    cd ncurses
    # By default ncurses will assume the pkgconfig's directory is the same
    # prefix used by the executable.  Because I restrict the initial
    # environment to just HOME and PATH--where PATH is set to /bin--configure
    # will find /bin/pkg-config and use /lib/pkgconfig, ignoring the --prefix
    # or --libdir options.  So instead make sure to explicitly provide
    # the correct path instead of relying on poor configure heuristics.
    make PKG_CONFIG_LIBDIR=/usr/lib/pkgconfig DESTDIR="$pkgdir" install

    # Ensure that projects linking against non-wide curses libraries use the
    # wide character varients instead.
    for lib in ncurses ncurses++ form panel menu; do
        printf 'INPUT(-l%sw)\n' "$lib" > "$pkgdir"/usr/lib/lib"$lib".so
        ln -s "$lib"w.pc "$pkgdir"/usr/lib/pkgconfig/"$lib".pc
    done

    # Add the -ltinfo flag when linking ncurses as many upstream projects don't
    # use pkg-config or ncurses-config to correctly determine the LDLIBS for
    # ncurses.  This is a hack around Arch deciding to enable tinfo as a split
    # library: https://bugs.archlinux.org/task/56000

    # This symlink needs to be explicitly removed first because shell
    # redirection will otherwise follow it.
    rm -f -- "$pkgdir"/usr/lib/libncursesw.so
    printf 'INPUT(libncursesw.so.%s -ltinfo)\n' "${pkgver:0:1}" > "$pkgdir"/usr/lib/libncursesw.so

    # Make projects link against ncurses instead when attempting to link with
    # curses.
    printf 'INPUT(-lncursesw)\n' > "$pkgdir"/usr/lib/libcursesw.so

    ln -sf libncurses.so "$pkgdir"/usr/lib/libcurses.so

    # Include some introduction and informal guides as they're quite nicely written.
    install -Dm0644 doc/hackguide.doc "$pkgdir"/usr/share/doc/"$pkgname"/hackguide.doc
    install -Dm0644 doc/ncurses-intro.doc "$pkgdir"/usr/share/doc/"$pkgname"/ncurses-intro.doc

    install -Dm0755 COPYING "$pkgdir"/usr/share/licenses/"$pkgname"/COPYING
}
